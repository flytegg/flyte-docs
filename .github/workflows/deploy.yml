name: Build documentation

on:
  push:
    # To trigger the workflow once you push to the `main` branch
    # Replace `main` with your branchâ€™s name
    branches: [ "master" ]
  # Specify to run a workflow manually from the Actions tab on GitHub
  workflow_dispatch:

env:
  # Name of module and id separated by a slash
  INSTANCE: Writerside/flyte
  # Replace HI with the ID of the instance in capital letters
  ARTIFACT: webHelpFLYTE2-all.zip
  # Docker image version
  DOCKER_VERSION: 2.1.1479-p3869

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Build Writerside docs using Docker
        uses: JetBrains/writerside-github-action@v4
        with:
          instance: ${{ env.INSTANCE }}
          artifact: ${{ env.ARTIFACT }}
          docker-version: ${{ env.DOCKER_VERSION }}

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: artifact
          path: artifacts/${{ env.ARTIFACT }}
          retention-days: 7

      - name: List Files
        run: ls -R

      - name: Extract Files
        run: 7z x artifactions/${{ env.ARTIFACT }}

      - name: List Files
        run: ls -R

#      - name: Publish to Cloudflare Pages
#        uses: cloudflare/pages-action@v1
#        with:
#          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
#          accountId: YOUR_ACCOUNT_ID
#          projectName: flyte-docs
#          directory: YOUR_BUILD_OUTPUT_DIRECTORY
#          # Optional: Enable this if you want to have GitHub Deployments triggered
#          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
#          # Optional: Switch what branch you are publishing to.
#          # By default this will be the branch which triggered this workflow
#          branch: main
#          # Optional: Change the working directory
#          workingDirectory: artifacts
#          # Optional: Change the Wrangler version, allows you to point to a specific version or a tag such as `beta`
#          wranglerVersion: '3'





#  deploy:
#    runs-on: ubuntu-latest
#    permissions:
#      contents: read
#      deployments: write
#    name: Deploy to Cloudflare Pages
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3
#      # Run your project's build step
#      # - name: Build
#      #   run: npm install && npm run build
#      - name: Publish
#        uses: cloudflare/pages-action@1
#        with:
#          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
#          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
#          projectName: YOUR_PROJECT_NAME # e.g. 'my-project'
#          directory: YOUR_DIRECTORY_OF_STATIC_ASSETS # e.g. 'dist'
#          gitHubToken: ${{ secrets.GITHUB_TOKEN }}